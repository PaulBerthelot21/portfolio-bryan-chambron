---
import Navigation from './Navigation.astro';
import LanguagePicker from './LanguagePicker.astro';
import ThemeToggle from './ThemeToggle.astro';
import { getLangFromUrl, useTranslations } from '../i18n/ui';
import { Icon } from 'astro-icon/components';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<header class="glass py-3 px-6 sticky top-0 z-50 transition-all duration-300">
    <div class="max-w-7xl mx-auto flex justify-between items-center">
        <a href="/" class="flex items-center gap-2 hover:opacity-80 transition-opacity duration-300 text-primary-600 dark:text-primary-400">
            <span class="text-xl"><Icon name="microphone" /></span> 
            <span class="font-medium tracking-wide">{t('nav.title')}</span>
        </a>
        
        <!-- Navigation desktop -->
        <div class="hidden md:flex items-center gap-6">
            <Navigation />
            <div class="flex items-center mx-2">
                <div class="w-[2px] h-3 bg-primary-300/80 dark:bg-primary-600/80 rounded-full animate-pulse mx-[2px]"></div>
                <div class="w-[2px] h-5 bg-primary-300/80 dark:bg-primary-600/80 rounded-full animate-pulse mx-[2px] animation-delay-200"></div>
                <div class="w-[2px] h-4 bg-primary-300/80 dark:bg-primary-600/80 rounded-full animate-pulse mx-[2px] animation-delay-500"></div>
            </div>
            <div class="flex items-center gap-3">
                <ThemeToggle />
                <LanguagePicker />
            </div>
        </div>
        
        <!-- Menu burger pour mobile -->
        <button id="burger-menu" class="md:hidden flex items-center justify-center cursor-pointer w-10 h-10 bg-primary-500/20 dark:bg-primary-700/30 rounded-lg text-primary-800 dark:text-primary-200" aria-label="Menu">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="burger-icon">
                <line x1="3" y1="12" x2="21" y2="12"></line>
                <line x1="3" y1="6" x2="21" y2="6"></line>
                <line x1="3" y1="18" x2="21" y2="18"></line>
            </svg>
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="close-icon hidden">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
            </svg>
        </button>
    </div>
    
    <!-- Menu mobile dÃ©roulant -->
    <div id="mobile-menu" class="hidden md:hidden w-full flex-col items-center gap-5 pt-4 pb-2 mt-3 border-t border-primary-100 dark:border-primary-800">
        <nav class="flex flex-col items-center w-full">
            <ul class="flex flex-col items-center gap-5 w-full">
                <li class="w-full text-center">
                    <a href="/" class="block w-full py-2 px-3 text-lg font-medium hover:bg-primary-50 dark:hover:bg-primary-800/30 rounded-lg transition-colors">
                        {t('nav.home')}
                    </a>
                </li>
                <li class="w-full text-center">
                    <a href="/about" class="block w-full py-2 px-3 text-lg font-medium hover:bg-primary-50 dark:hover:bg-primary-800/30 rounded-lg transition-colors">
                        {t('nav.about')}
                    </a>
                </li>
                <li class="w-full text-center">
                    <a href="/projects" class="block w-full py-2 px-3 text-lg font-medium hover:bg-primary-50 dark:hover:bg-primary-800/30 rounded-lg transition-colors">
                        {t('nav.projects')}
                    </a>
                </li>
                <li class="w-full text-center">
                    <a href="/contact" class="block w-full py-2 px-3 text-lg font-medium hover:bg-primary-50 dark:hover:bg-primary-800/30 rounded-lg transition-colors">
                        {t('nav.contact')}
                    </a>
                </li>
            </ul>
        </nav>
        <div class="flex items-center gap-4 mt-3 pt-3 border-t border-primary-100 dark:border-primary-800 w-full justify-center z-10">
            <!-- Boutons de thÃ¨me et langue pour mobile -->
            <button id="mobile-theme-toggle" class="theme-toggle-btn" aria-label="Changer de thÃ¨me">
                <span class="sr-only">Changer de thÃ¨me</span>
                <span class="sun-icon text-primary-600 dark:text-primary-400"><Icon name="sun" /></span>
                <span class="moon-icon text-primary-600 dark:text-primary-400"><Icon name="moon" /></span>
            </button>
            
            <div class="language-picker relative ml-2">
                <button id="mobile-language-dropdown-button" class="lang-glass flex items-center gap-2 px-3 py-1.5 rounded-full text-sm font-medium text-primary-500 dark:text-primary-400 cursor-pointer">
                    <span class="text-lg mr-1">{lang === 'fr' ? "ðŸ‡«ðŸ‡·" : "ðŸ‡¬ðŸ‡§"}</span>
                    <span>{lang.toUpperCase()}</span>
                    <svg class="w-3 h-3 fill-current text-primary-500 dark:text-primary-400 ml-1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                        <path d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"></path>
                    </svg>
                </button>
                
                <div id="mobile-language-dropdown" class="language-dropdown absolute right-0 top-full mt-2 py-2 w-32 lang-glass rounded-lg shadow-lg z-50 hidden">
                    <a 
                        href={lang === 'fr' ? '/en' + Astro.url.pathname : Astro.url.pathname.replace(/^\/en\/?/, '/')}
                        class="flex items-center gap-2 px-4 py-2 text-sm hover:bg-primary-50/30 dark:hover:bg-primary-900/30 transition-colors duration-200"
                    >
                        <span class="text-lg">{lang === 'fr' ? "ðŸ‡¬ðŸ‡§" : "ðŸ‡«ðŸ‡·"}</span>
                        <span>{lang === 'fr' ? "English" : "FranÃ§ais"}</span>
                    </a>
                </div>
            </div>
        </div>
    </div>
</header>

<style>
    @keyframes pulse {
        0% {
            opacity: 0.4;
            transform: scaleY(0.8);
        }
        50% {
            opacity: 0.8;
            transform: scaleY(1.1);
        }
        100% {
            opacity: 0.4;
            transform: scaleY(0.8);
        }
    }
    
    .animate-pulse {
        animation: pulse 2s ease infinite;
    }
    
    .animation-delay-200 {
        animation-delay: 0.2s;
    }
    
    .animation-delay-500 {
        animation-delay: 0.5s;
    }

    /* Style pour l'effet glassmorphism */
    header {
        position: sticky;
        top: 0;
        z-index: 50;
        background-image: linear-gradient(to right, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.1));
        backdrop-filter: blur(8px);
    }
    
    :root.dark header {
        background-image: linear-gradient(to right, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.1));
        backdrop-filter: blur(8px);
    }
    
    /* Animation pour le menu mobile */
    #mobile-menu.open {
        display: flex;
        animation: slideDown 0.3s ease-in-out;
    }
    
    @keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    /* Styles pour les icÃ´nes du burger menu */
    #burger-menu.active .burger-icon {
        display: none;
    }
    
    #burger-menu.active .close-icon {
        display: block;
    }
    
    /* Animation des Ã©lÃ©ments du menu mobile */
    #mobile-menu.open li {
        animation: fadeSlideIn 0.5s ease forwards;
        opacity: 0;
        transform: translateY(10px);
    }
    
    #mobile-menu.open li:nth-child(1) { animation-delay: 0.1s; }
    #mobile-menu.open li:nth-child(2) { animation-delay: 0.2s; }
    #mobile-menu.open li:nth-child(3) { animation-delay: 0.3s; }
    #mobile-menu.open li:nth-child(4) { animation-delay: 0.4s; }
    
    @keyframes fadeSlideIn {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    /* Styles pour le toggle de thÃ¨me mobile */
    .theme-toggle-btn {
        background-color: transparent;
        border: none;
        cursor: pointer;
        padding: 0.25rem;
        border-radius: 9999px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }
    
    .theme-toggle-btn:hover {
        opacity: 0.7;
    }
    
    .sun-icon {
        display: none;
    }
    
    .moon-icon {
        display: block;
    }
    
    :root.dark .sun-icon {
        display: block;
    }
    
    :root.dark .moon-icon {
        display: none;
    }
    
    /* Styles pour le sÃ©lecteur de langue mobile */
    .lang-glass {
        background: rgba(255, 255, 255, 0.25);
        border: 1px solid rgba(255, 255, 255, 0.4);
        backdrop-filter: blur(15px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        overflow: hidden;
        position: relative;
    }
    
    :root.dark .lang-glass {
        background: rgba(40, 40, 60, 0.35);
        border: 1px solid rgba(100, 100, 150, 0.25);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
</style>

<script>
    // Script pour initialiser le thÃ¨me au chargement initial (pour Ã©viter le flash)
    const script = document.createElement('script');
    script.innerHTML = `
      const rootElement = document.documentElement;
      const theme = localStorage.getItem('theme') || 'light';
      if (theme === 'dark') {
        rootElement.classList.add('dark');
      } else {
        rootElement.classList.remove('dark');
      }
    `;
    document.head.appendChild(script);
    
    // Gestion du menu burger
    document.addEventListener('DOMContentLoaded', () => {
        const burgerButton = document.getElementById('burger-menu');
        const mobileMenu = document.getElementById('mobile-menu');
        
        if (burgerButton && mobileMenu) {
            burgerButton.addEventListener('click', () => {
                mobileMenu.classList.toggle('hidden');
                mobileMenu.classList.toggle('open');
                burgerButton.classList.toggle('active');
            });
            
            // Fermer le menu quand on clique sur un lien de navigation
            const navLinks = mobileMenu.querySelectorAll('nav a');
            navLinks.forEach(link => {
                link.addEventListener('click', () => {
                    mobileMenu.classList.add('hidden');
                    mobileMenu.classList.remove('open');
                    burgerButton.classList.remove('active');
                });
            });
        }
        
        // Gestion du thÃ¨me en mode mobile
        const mobileThemeToggle = document.getElementById('mobile-theme-toggle');
        if (mobileThemeToggle) {
            mobileThemeToggle.addEventListener('click', (e) => {
                e.stopPropagation();
                const rootElement = document.documentElement;
                const isDark = rootElement.classList.contains('dark');
                
                if (isDark) {
                    rootElement.classList.remove('dark');
                    localStorage.setItem('theme', 'light');
                } else {
                    rootElement.classList.add('dark');
                    localStorage.setItem('theme', 'dark');
                }
            });
        }
        
        // Gestion du sÃ©lecteur de langue en mode mobile
        const languageDropdownButton = document.getElementById('mobile-language-dropdown-button');
        const languageDropdown = document.getElementById('mobile-language-dropdown');
        
        if (languageDropdownButton && languageDropdown) {
            languageDropdownButton.addEventListener('click', (e) => {
                e.stopPropagation();
                languageDropdown.classList.toggle('hidden');
            });
            
            document.addEventListener('click', () => {
                languageDropdown.classList.add('hidden');
            });
            
            languageDropdown.addEventListener('click', (e) => {
                e.stopPropagation();
            });
        }
    });
</script>